---
- name: Terraform Init and Plan
  hosts: localhost
  connection: local
  gather_facts: no

  collections:
    - cloud.terraform
    - amazon.aws

  tasks:
    - name: Check if S3 bucket exists
      amazon.aws.s3_bucket_info:
        name: "{{ tf_s3_bucket }}"
      register: s3_bucket_info

    - name: Create S3 bucket if it doesn't exist
      amazon.aws.s3_bucket:
        name: "{{ tf_s3_bucket }}"
        state: present
        region: "{{ tf_region }}"
        public_access:
          block_public_acls: true
          ignore_public_acls: true
      when: s3_bucket_info.buckets | default([]) | length == 0
  
    - name: Clone github repo
      ansible.builtin.git:
        repo: "{{ git_url_tf }}"
        dest: "urban"
        version: "main"
        force: true

    - name: Initialize Terraform
      cloud.terraform.terraform:
        project_path: "urban/terraform/"
        state: present
        force_init: yes
        init_reconfigure: yes
        plan_file: "theplan"
        backend_config:
          region: "{{ tf_region }}"
          bucket: "{{ tf_s3_bucket }}"
          key: "random.tfstate"
      check_mode: yes
      register: terraform_output

    - name: Show Terraform output
      debug:
        var: terraform_output

    - name: Stash Terraform plan
      cloud.terraform.plan_stash:
        path: "urban/terraform/theplan"
        var_name: stashed_plan
        state: stash
      #no_log: true
      register: registered_plan

    - name: Show Terraform output
      debug:
        var: registered_plan

    - name: Example task to register a variable
      shell: echo "This is a test"
      register: my_variable
    
    - name: Set variable
      set_fact:
        new_variable: "{{ my_variable }}"
    - name: print variable
      debug:
        msg: "{{ new_variable }}"
...